pipeline {
    agent any
    stages {
        stage('Clone Repository') {
            steps {
                checkout scm
            }
        }
        stage('Build Backend Docker Image') {
            steps {
                script {
                    sh 'docker build -t parvg/ml-backend:latest ./backend'
                }
            }
        }
        stage('Build Frontend Docker Image') {
            steps {
                script {
                    sh 'docker build -t parvg/ml-frontend:latest ./frontend'
                }
            }
        }
        stage('Push Docker Images to Registry') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                    sh 'echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin'
                    sh 'docker push parvg/ml-backend:latest'
                    sh 'docker push parvg/ml-frontend:latest'
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: 'kube-config', variable: 'KUBECONFIG')]) {
                        sh 'kubectl apply -f ./kubernetes/backend-deployment.yaml'
                        sh 'kubectl apply -f ./kubernetes/backend-service.yaml'
                        sh 'kubectl apply -f ./kubernetes/frontend-deployment.yaml'
                        sh 'kubectl apply -f ./kubernetes/frontend-service.yaml'
                }
            }
        }
    }
}